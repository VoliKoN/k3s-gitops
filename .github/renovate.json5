{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>VoliKoN/k3s-gitops//.github/renovate/autoMerge.json5",
    "github>VoliKoN/k3s-gitops//.github/renovate/labels.json5",
    "github>VoliKoN/k3s-gitops//.github/renovate/semanticCommits.json5",
    "github>VoliKoN/k3s-gitops//.github/renovate/groups.json5"
  ],
  "platform": "github",
  "username": "gitops-updater[bot]",
  "repositories": ["VoliKoN/k3s-gitops"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "rosey-bot <99018933+gitops-updater[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  // set up ignored deps
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],
  // set up renovate managers
  "docker-compose": {
    "fileMatch": [
      "ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ],
    "ignorePaths": [
      "cluster/.+/gotk-components\\.ya?ml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ],
    "ignorePaths": [
      "cluster/.+/gotk-components\\.ya?ml$"
    ]
  },
  "regexManagers": [
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["(?!.*traefik)cluster.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "description": "Process various dependencies",
      "fileMatch": [
        "ansible/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "description": "Process raw GitHub URLs",
      "fileMatch": ["cluster/.+\\.ya?ml$"],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom versioning
    {
      "matchDatasources": [
        "docker",
        "github-releases"
      ],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent",
        "ghcr.io/linuxserver/jellyfin",
        "Hypfer/Valetudo"
      ]
    },
  ]
}

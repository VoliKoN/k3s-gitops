{
  extends: [
    ':enableRenovate',
    'config:recommended',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':separatePatchReleases',
    'docker:enableMajor',
    ':enablePreCommit',
    'github>VoliKoN/k3s-gitops//.github/renovate/autoMerge.json5',
    'github>VoliKoN/k3s-gitops//.github/renovate/labels.json5',
    'github>VoliKoN/k3s-gitops//.github/renovate/semanticCommits.json5',
    'github>VoliKoN/k3s-gitops//.github/renovate/groups.json5',
    'github>VoliKoN/k3s-gitops//.github/renovate/disabledDatasources.json5',
  ],
  platform: 'github',
  username: 'gitops-updater[bot]',
  repositories: [
    'VoliKoN/k3s-gitops',
  ],
  onboarding: false,
  requireConfig: 'optional',
  gitAuthor: 'rosey-bot <99018933+gitops-updater[bot]@users.noreply.github.com>',
  dependencyDashboardTitle: 'Renovate Dashboard ü§ñ',
  suppressNotifications: [
    'prIgnoreNotification',
  ],
  rebaseWhen: 'conflicted',
  commitBodyTable: true,
  commitMessagePrefix: '‚¨ÜÔ∏è',
  ignoreDeps: [
    'ghcr.io/fluxcd/helm-controller',
    'ghcr.io/fluxcd/image-automation-controller',
    'ghcr.io/fluxcd/image-reflector-controller',
    'ghcr.io/fluxcd/kustomize-controller',
    'ghcr.io/fluxcd/notification-controller',
    'ghcr.io/fluxcd/source-controller',
  ],
  flux: {
    fileMatch: [
      'cluster/.+\\.ya?ml$',
    ],
    ignorePaths: [
      'cluster/.+/gotk-components\\.ya?ml$',
    ],
  },
  'helm-values': {
    fileMatch: [
      'cluster/.+\\.ya?ml$',
    ],
  },
  kubernetes: {
    fileMatch: [
      'cluster/.+\\.ya?ml$',
    ],
    ignorePaths: [
      'cluster/.+/gotk-components\\.ya?ml$',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      description: 'Process CRD dependencies',
      fileMatch: [
        'cluster/.+\\.ya?ml$',
      ],
      matchStrings: [
        'registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n',
        'datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}',
    },
    {
      customType: 'regex',
      description: 'Process various dependencies',
      fileMatch: [
        'ansible/.+\\.ya?ml$',
        'cluster/.+\\.ya?ml$',
      ],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    },
    {
      customType: 'regex',
      description: 'Process raw GitHub URLs',
      fileMatch: [
        'cluster/.+\\.ya?ml$',
      ],
      matchStrings: [
        'https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*',
      ],
      datasourceTemplate: 'github-releases',
      versioningTemplate: 'semver',
    },
  ],
  packageRules: [
    {
      matchDatasources: [
        'helm',
      ],
      ignoreDeprecated: true,
    },
    {
      matchDatasources: [
        'docker',
      ],
      commitMessageExtra: 'to {{newVersion}}',
    },
  ],
}
